ggplot(data=datos, aes(x=Deposit,y=p_Killed, colour=Insecticide))+ geom_point()+ theme_classic()+
theme(text = element_text(size = 11),element_line(linewidth =0.5))
#Convertimos a datos desagrupados (más común en la práctica)
#library(tidyverse)
datos$NoKilled<-datos$Number-datos$Killed
datna_1=datos %>% group_by(Killed,Insecticide,Deposit) %>%
do( data.frame(died= rep(1, .$Killed)))
datna_2=datos %>% group_by(Killed,Insecticide,Deposit) %>%
do( data.frame(died= rep(0, .$NoKilled)))
datna<-rbind(datna_1,datna_2)
#Generar variables con datos en logaritmos
datna$lnD=log(datna$Deposit)
#datos$lnD=factor(datos$lnD) #declaramos la variable como factor
#En general hay 4 ligas que se podrían usar para covariables factores: logit, probit, cloglog y log.
#Aqui emplearemos 3 ligas porque tenemos una variable numérica entre las covariables, omitimos liga log.
fitlogit=glm(died~Insecticide*lnD, family = binomial(link="logit"), data=datna)
#summary(fitlogit)
fitprob=glm(died~Insecticide*lnD, family = binomial(link="probit"), data=datna)
#summary(fitprob)
fitcll=glm(died~Insecticide*lnD, family = binomial(link="cloglog"), data=datna)
#summary(fitcll)
#En general hay 4 ligas que se podrían usar para covariables factores: logit, probit, cloglog y log.
#Aqui emplearemos 3 ligas porque tenemos una variable numérica entre las covariables, omitimos liga log.
fitlogit_s=glm(died~Insecticide+lnD, family = binomial(link="logit"), data=datna)
#summary(fitlogit)
fitprob_s=glm(died~Insecticide+lnD, family = binomial(link="probit"), data=datna)
#summary(fitprob)
fitcll_s=glm(died~Insecticide+lnD, family = binomial(link="cloglog"), data=datna)
#summary(fitcll)
#stargazer(fitlogit, fitprob, fitcll, fitlogit_s, fitprob_s, fitcll_s)
#A continuación se muestran los valores AIC y BIC, respectivamente, para las ligas logit, probit y cloglog. Como se mencinó anteriormente, se elige el modelo con el menor AIC, que es el de la liga probit.
#Además con el modelo completo también los criterios AIC y BIC coinciden
# ("AIC:logit probit cloglog")
# c(AIC(fitlogit), AIC(fitprob),  AIC(fitcll))
# ("BIC:logit probit cloglog")
# c(BIC(fitlogit), BIC(fitprob), BIC(fitcll))
#La primera prueba que se debe realizar es
#la similar a la prueba asociada a la tabla ANOVA en regresión lineal múltiple
library(multcomp)
K=matrix(c(0,1,0,0,
0,0,1,0,
0,0,0,1), ncol=4, nrow=3, byrow=TRUE)
m=c(0,0,0)
summary(glht(fitprob_s, linfct=K, rhs=m), test=Chisqtest())  #Chisqtest() es apropiada para datos donde y no es continua
# Se rechaza H0, lo que implica que se puede proceder
# al análisis del modelo
datna$lnD2=datna$lnD*datna$lnD
#En general hay 4 ligas que se podrían usar para covariables factores: logit, probit, cloglog y log.
#Aqui emplearemos 3 ligas porque tenemos una variable numérica entre las covariables, omitimos liga log.
fitlogit=glm(died~Insecticide*lnD+Insecticide*lnD2, family = binomial(link="logit"), data=datna)
#summary(fitlogit)
fitprob=glm(died~Insecticide*lnD+Insecticide*lnD2, family = binomial(link="probit"), data=datna)
#summary(fitprob)
fitcll=glm(died~Insecticide*lnD+Insecticide*lnD2, family = binomial(link="cloglog"), data=datna)
#summary(fitcll)
#En general hay 4 ligas que se podrían usar para covariables factores: logit, probit, cloglog y log.
#Aqui emplearemos 3 ligas porque tenemos una variable numérica entre las covariables, omitimos liga log.
fitlogit_s=glm(died~Insecticide+lnD +lnD2, family = binomial(link="logit"), data=datna)
#summary(fitlogit)
fitprob_s=glm(died~Insecticide+lnD +lnD2, family = binomial(link="probit"), data=datna)
#summary(fitprob)
fitcll_s=glm(died~Insecticide+lnD +lnD2, family = binomial(link="cloglog"), data=datna)
#summary(fitcll)
#stargazer(fitlogit, fitprob, fitcll, fitlogit_s, fitprob_s, fitcll_s)
#Además con el modelo completo también los criterios AIC y BIC coinciden
# ("AIC:logit probit cloglog")
# c(AIC(fitlogit), AIC(fitprob),  AIC(fitcll))
# ("BIC:logit probit cloglog")
# c(BIC(fitlogit), BIC(fitprob), BIC(fitcll))
#La primera prueba que se debe realizar es
#la similar a la prueba asociada a la tabla ANOVA en regresión lineal múltiple
library(multcomp)
K=matrix(c(0,1,0,0,0,
0,0,1,0,0,
0,0,0,1,0,
0,0,0,0,1), ncol=5, nrow=4, byrow=TRUE)
m=c(0,0,0,0)
summary(glht(fitprob_s, linfct=K, rhs=m), test=Chisqtest())  #Chisqtest() es apropiada para datos donde y no es continua
# Se rechaza H0, lo que implica que se puede proceder
# al análisis del modelo
# Se incluye cierta aleatorización para datos binarios
library(statmod)
fitlogitqr <- qresid(fitprob_s)
#qqnorm( fitlogitqr, las=1 ); qqline( fitlogitqr)
lilKS<-nortest::lillie.test(fitlogitqr)
Shapiro<-shapiro.test(fitlogitqr)
qqnorm( fitlogitqr, las=1 ); qqline( fitlogitqr)
X11()
library(ggplot2)
library(ggResidpanel)
resid_panel(fitlogit, plots=c("all"))
### Ejemplo de problema tipo ANOVA (dos factores)
### con datos binarios
### Parte 2. Comparación de modelos con diferentes funciones ligas,
### verificación de supuestos e interpretación.
rm(list = ls(all.names = TRUE))
gc()
# El NYT reportó resultados sobre el efecto del medicamento AZT
#(Zidovudina o Azidotimidina fue el primer medicamento antirretroviral para el desarrollo de SIDA)
# para disminuir el desarrollo de los síntomas de SIDA (Feb 15, 1991).
# Un grupo de 338 veteranos cuyo sistema inmune empezaba a mostrar signos de la
# enfermedad causada por el VIH fueron considerados para el estudio.
# De forma aleatoria se asignó la aplicación de AZT, de manera que
# a un grupo se le aplicó de forma inmediata
# y al otro grupo se le aplicó hasta que sus células T mostraban que el
# sistema inmune estaba muy débil.
# Para ajustar los grupos se consideró la raza de los veteranos
# Las tres variables que se consideraron son:
# X= 1 si se aplicó el AZT de forma inmediata
# Z= raza (blanca, negra)
# Y= desarrollo de síntomas de SIDA (1-Yes, 0-No)
# Los resultaron fueron los siguientes.
# Durante los primeros 3 años del estudio,
# de los que recibieron de forma inmediata AZT
# 11 de 63 veteranos de raza negra desarrollaron síntomas de SIDA
# y que 14 de 107 de raza blanca.
# De los que NO recibieron de forma inmediata AZT
# 12 de 55 veteranos de raza negra desarrollaron síntomas de SIDA
# y que 32 de 113 de raza blanca
# ¿Qué se puede inferir con estos datos sobre el uso o no de AZT?
# ¿Existe evidencia de un beneficio al suministrar AZT?
n=c(11,63-11,14, 107-14, 12, 55-12, 32, 113-32)
Y=c("Yes", "No", "Yes", "No", "Yes", "No", "Yes", "No")
Z=c("b", "b", "w", "w", "b", "b", "w", "w")
X=c("AZT", "AZT", "AZT", "AZT", "NoAZT", "NoAZT", "NoAZT", "NoAZT")
#Datos agrupados forma 1
DatosAg= data.frame(cbind(n,Y,Z,X))
summary(DatosAg)
DatosAg$n=as.numeric(as.character(DatosAg$n))
summary(DatosAg)
#Datos desagrupados (más común en la práctica)
head(DatosAg)
library(tidyverse)
Datos=DatosAg %>% group_by(Y,Z,X) %>%
do( data.frame(unos= rep(1, .$n)) )
head(Datos)
sum(DatosAg$n)
summary(Datos)
Datos=as.data.frame(Datos)
Datos[sapply(Datos, is.character)] <- lapply(Datos[sapply(Datos, is.character)],
as.factor)
summary(Datos)
#En lo que sigue usaremos los datos no agrupados
#Comenzaremos con el modelo más completo, es decir
#incluyendo interacciones
#Hay 4 ligas que se podrían usar:
fitlogit=glm(Y~X*Z, family = binomial(link="logit"), data=Datos)
summary(fitlogit)
fitprob=glm(Y~X*Z, family = binomial(link="probit"), data=Datos)
summary(fitprob)
fitlog=glm(Y~X*Z, family = binomial(link="log"), data=Datos)
summary(fitlog)
fitcll=glm(Y~X*Z, family = binomial(link="cloglog"), data=Datos)
summary(fitcll)
#Notar que las estimaciones son diferentes, pues cada modelo
#tiene una distinta forma de representar la relación entre la media
#y las covariables
#Sin embargo, dado que las covariables son categóricas,
#el modelo más completo
#(incluye todas las interacciones entre las covariables que se considera),
#lleva a que las estimaciones de las probabilidades son las mismas
#sin importar la liga que se use
newdata <- data.frame(X = c("AZT", "NoAZT","AZT", "NoAZT"), Z = c("b", "b","w", "w") )
newdata$logit <- predict(fitlogit, newdata[,1:2], type = c("response"), se.fit=TRUE)$fit
newdata$prob <- predict(fitprob, newdata[,1:2], type = c("response"), se.fit=TRUE)$fit
newdata$log <- predict(fitlog, newdata[,1:2], type = c("response"), se.fit=TRUE)$fit
newdata$cll <- predict(fitcll, newdata[,1:2], type = c("response"), se.fit=TRUE)$fit
newdata
#Además con el modelo completo también los criterios AIC y BIC coinciden
c(AIC(fitlogit), AIC(fitprob), AIC(fitlog), AIC(fitcll))
c(BIC(fitlogit), BIC(fitprob), BIC(fitlog), BIC(fitcll))
#Las diferencias se observarán al considerar modelos reducidos que
#no incluyan ciertas interacciones entre las variables
#Tomemos en lo que sigue de referencia el modelo logit
summary(fitlogit)
#La primera prueba que se debe realizar es
#la similar a la prueba asociada a la tabla ANOVA en regresión lineal múltiple
library(multcomp)
K=matrix(c(0,1,0,0,
0,0,1,0,
0,0,0,1), ncol=4, nrow=3, byrow=TRUE)
m=c(0,0,0)
summary(glht(fitlogit, linfct=K, rhs=m), test=Chisqtest())  #Chisqtest() es apropiada para datos donde y no es continua
# Se rechaza H0, lo que implica que se puede proceder
# al análisis del modelo
#Por lo general, en un problema tipo ANOVA
# se desea un modelo reducido antes de hacer
# la inferencia sobre la variable de interés (X)
#Por ejemplo, se procede a eliminar las interacciones.
#En este caso correspondería sólo al parámetro beta3.
#Dado que aquí sólo hay una variable asociada a la interacción
#se puede leer directamente del summary
#El p-value es .240, por lo que no se rechaza H0
#Un modelo reducido con sólo efectos principales es plausible
fitlogitb=glm(Y~X+Z, family = binomial(link="logit"), data=Datos)
summary(fitlogitb)
#Notar que también a partir de este modelo se puede
#reducir aún más el modelo, pues parece que la variable Z
#no agrega información relevante en la modelación
#de la esperanza una vez que se agrega la variable X (p-value =.84755)
fitlogitc=glm(Y~X, family = binomial(link="logit"), data=Datos)
summary(fitlogitc)
#Con este modelo podríamos ya responder las preguntas
#sobre el efecto de la variable X
#Notar que con la prueba de bondad de ajuste
#no se rechaza H0
#es decir, el modelo es plausible para los datos
anova(fitlogit, fitlogitc, test = "Chisq")
#Algo similar se debería realizar con el resto de modelos
fitprobc=glm(Y~X, family = binomial(link="probit"), data=Datos)
fitlogc=glm(Y~X, family = binomial(link="log"), data=Datos)
fitcllc=glm(Y~X, family = binomial(link="cloglog"), data=Datos)
c(AIC(fitlogitc), AIC(fitprobc), AIC(fitlogc), AIC(fitcllc))
#Nuevamente es un modelo que incluye sólo una variable (sería el completo)
#Por eso la coincidencia. En general, con variables continuas no se
#obtiene la coincidencia y se debería seleccionar una liga.
#Uno de los aspectos más relevantes es analizar si el modelo era adecuado
#antes de realizar las pruebas de hipótesis
#Es decir, con el modelo con interacciones
X11()
library(ggplot2)
library(ggResidpanel)
resid_panel(fitlogit, plots=c("all"))
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stargazer)
library(kableExtra)
datos<-read_csv("https://raw.githubusercontent.com/LeobardoEnriquezH/Data/main/Preg3B.csv", show_col_types = FALSE)
datos$Insecticide<-factor(datos$Insecticide) #declaramos la variable como factor
#Realizamos un relevel para poner como referencia "1"
datos$Insecticide<-relevel(datos$Insecticide,"A")
#Creamos dato de proporcion de insectos que mueren
datos$p_Killed<-datos$Killed/datos$Number
ggplot(data=datos, aes(x=Deposit,y=p_Killed, colour=Insecticide))+ geom_point()+ theme_classic()+
theme(text = element_text(size = 11),element_line(linewidth =0.5))
#Convertimos a datos desagrupados (más común en la práctica)
#library(tidyverse)
datos$NoKilled<-datos$Number-datos$Killed
datna_1=datos %>% group_by(Killed,Insecticide,Deposit) %>%
do( data.frame(died= rep(1, .$Killed)))
datna_2=datos %>% group_by(Killed,Insecticide,Deposit) %>%
do( data.frame(died= rep(0, .$NoKilled)))
datna<-rbind(datna_1,datna_2)
#Generar variables con datos en logaritmos
datna$lnD=log(datna$Deposit)
#datos$lnD=factor(datos$lnD) #declaramos la variable como factor
#En general hay 4 ligas que se podrían usar para covariables factores: logit, probit, cloglog y log.
#Aqui emplearemos 3 ligas porque tenemos una variable numérica entre las covariables, omitimos liga log.
fitlogit=glm(died~Insecticide*lnD, family = binomial(link="logit"), data=datna)
#summary(fitlogit)
fitprob=glm(died~Insecticide*lnD, family = binomial(link="probit"), data=datna)
#summary(fitprob)
fitcll=glm(died~Insecticide*lnD, family = binomial(link="cloglog"), data=datna)
#summary(fitcll)
#En general hay 4 ligas que se podrían usar para covariables factores: logit, probit, cloglog y log.
#Aqui emplearemos 3 ligas porque tenemos una variable numérica entre las covariables, omitimos liga log.
fitlogit_s=glm(died~Insecticide+lnD, family = binomial(link="logit"), data=datna)
#summary(fitlogit)
fitprob_s=glm(died~Insecticide+lnD, family = binomial(link="probit"), data=datna)
#summary(fitprob)
fitcll_s=glm(died~Insecticide+lnD, family = binomial(link="cloglog"), data=datna)
#summary(fitcll)
#stargazer(fitlogit, fitprob, fitcll, fitlogit_s, fitprob_s, fitcll_s)
#A continuación se muestran los valores AIC y BIC, respectivamente, para las ligas logit, probit y cloglog. Como se mencinó anteriormente, se elige el modelo con el menor AIC, que es el de la liga probit.
#Además con el modelo completo también los criterios AIC y BIC coinciden
# ("AIC:logit probit cloglog")
# c(AIC(fitlogit), AIC(fitprob),  AIC(fitcll))
# ("BIC:logit probit cloglog")
# c(BIC(fitlogit), BIC(fitprob), BIC(fitcll))
#La primera prueba que se debe realizar es
#la similar a la prueba asociada a la tabla ANOVA en regresión lineal múltiple
library(multcomp)
K=matrix(c(0,1,0,0,
0,0,1,0,
0,0,0,1), ncol=4, nrow=3, byrow=TRUE)
m=c(0,0,0)
summary(glht(fitprob_s, linfct=K, rhs=m), test=Chisqtest())  #Chisqtest() es apropiada para datos donde y no es continua
# Se rechaza H0, lo que implica que se puede proceder
# al análisis del modelo
datna$lnD2=datna$lnD*datna$lnD
#En general hay 4 ligas que se podrían usar para covariables factores: logit, probit, cloglog y log.
#Aqui emplearemos 3 ligas porque tenemos una variable numérica entre las covariables, omitimos liga log.
fitlogit=glm(died~Insecticide*lnD+Insecticide*lnD2, family = binomial(link="logit"), data=datna)
#summary(fitlogit)
fitprob=glm(died~Insecticide*lnD+Insecticide*lnD2, family = binomial(link="probit"), data=datna)
#summary(fitprob)
fitcll=glm(died~Insecticide*lnD+Insecticide*lnD2, family = binomial(link="cloglog"), data=datna)
#summary(fitcll)
#En general hay 4 ligas que se podrían usar para covariables factores: logit, probit, cloglog y log.
#Aqui emplearemos 3 ligas porque tenemos una variable numérica entre las covariables, omitimos liga log.
fitlogit_s=glm(died~Insecticide+lnD +lnD2, family = binomial(link="logit"), data=datna)
#summary(fitlogit)
fitprob_s=glm(died~Insecticide+lnD +lnD2, family = binomial(link="probit"), data=datna)
#summary(fitprob)
fitcll_s=glm(died~Insecticide+lnD +lnD2, family = binomial(link="cloglog"), data=datna)
#summary(fitcll)
#stargazer(fitlogit, fitprob, fitcll, fitlogit_s, fitprob_s, fitcll_s)
#Además con el modelo completo también los criterios AIC y BIC coinciden
# ("AIC:logit probit cloglog")
# c(AIC(fitlogit), AIC(fitprob),  AIC(fitcll))
# ("BIC:logit probit cloglog")
# c(BIC(fitlogit), BIC(fitprob), BIC(fitcll))
#La primera prueba que se debe realizar es
#la similar a la prueba asociada a la tabla ANOVA en regresión lineal múltiple
library(multcomp)
K=matrix(c(0,1,0,0,0,
0,0,1,0,0,
0,0,0,1,0,
0,0,0,0,1), ncol=5, nrow=4, byrow=TRUE)
m=c(0,0,0,0)
summary(glht(fitprob_s, linfct=K, rhs=m), test=Chisqtest())  #Chisqtest() es apropiada para datos donde y no es continua
# Se rechaza H0, lo que implica que se puede proceder
# al análisis del modelo
# Se incluye cierta aleatorización para datos binarios
library(statmod)
fitlogitqr <- qresid(fitprob_s)
#qqnorm( fitlogitqr, las=1 ); qqline( fitlogitqr)
lilKS<-nortest::lillie.test(fitlogitqr)
Shapiro<-shapiro.test(fitlogitqr)
library(ggplot2)
library(ggResidpanel)
resid_panel(fitprob_s, plots=c("all"))
ggplot(data = datosfin, aes(x = Deposit))+
geom_point(aes(y = p_Killed, colour="coral", shape =Insecticide )) +
geom_point(aes(y = prob_s, colour="deepskyblue", shape = Insecticide)) +
scale_y_continuous(sec.axis = sec_axis(~ .*1,  name="probit")) + theme_bw()
knitr::opts_chunk$set(echo = TRUE)
library(tidyverse)
library(stargazer)
library(kableExtra)
datos<-read_csv("https://raw.githubusercontent.com/LeobardoEnriquezH/Data/main/Preg3B.csv", show_col_types = FALSE)
datos$Insecticide<-factor(datos$Insecticide) #declaramos la variable como factor
#Realizamos un relevel para poner como referencia "1"
datos$Insecticide<-relevel(datos$Insecticide,"A")
#Creamos dato de proporcion de insectos que mueren
datos$p_Killed<-datos$Killed/datos$Number
ggplot(data=datos, aes(x=Deposit,y=p_Killed, colour=Insecticide))+ geom_point()+ theme_classic()+
theme(text = element_text(size = 11),element_line(linewidth =0.5))
#Convertimos a datos desagrupados (más común en la práctica)
#library(tidyverse)
datos$NoKilled<-datos$Number-datos$Killed
datna_1=datos %>% group_by(Killed,Insecticide,Deposit) %>%
do( data.frame(died= rep(1, .$Killed)))
datna_2=datos %>% group_by(Killed,Insecticide,Deposit) %>%
do( data.frame(died= rep(0, .$NoKilled)))
datna<-rbind(datna_1,datna_2)
#Generar variables con datos en logaritmos
datna$lnD=log(datna$Deposit)
#datos$lnD=factor(datos$lnD) #declaramos la variable como factor
#En general hay 4 ligas que se podrían usar para covariables factores: logit, probit, cloglog y log.
#Aqui emplearemos 3 ligas porque tenemos una variable numérica entre las covariables, omitimos liga log.
fitlogit=glm(died~Insecticide*lnD, family = binomial(link="logit"), data=datna)
#summary(fitlogit)
fitprob=glm(died~Insecticide*lnD, family = binomial(link="probit"), data=datna)
#summary(fitprob)
fitcll=glm(died~Insecticide*lnD, family = binomial(link="cloglog"), data=datna)
#summary(fitcll)
#En general hay 4 ligas que se podrían usar para covariables factores: logit, probit, cloglog y log.
#Aqui emplearemos 3 ligas porque tenemos una variable numérica entre las covariables, omitimos liga log.
fitlogit_s=glm(died~Insecticide+lnD, family = binomial(link="logit"), data=datna)
#summary(fitlogit)
fitprob_s=glm(died~Insecticide+lnD, family = binomial(link="probit"), data=datna)
#summary(fitprob)
fitcll_s=glm(died~Insecticide+lnD, family = binomial(link="cloglog"), data=datna)
#summary(fitcll)
#stargazer(fitlogit, fitprob, fitcll, fitlogit_s, fitprob_s, fitcll_s)
#A continuación se muestran los valores AIC y BIC, respectivamente, para las ligas logit, probit y cloglog. Como se mencinó anteriormente, se elige el modelo con el menor AIC, que es el de la liga probit.
#Además con el modelo completo también los criterios AIC y BIC coinciden
# ("AIC:logit probit cloglog")
# c(AIC(fitlogit), AIC(fitprob),  AIC(fitcll))
# ("BIC:logit probit cloglog")
# c(BIC(fitlogit), BIC(fitprob), BIC(fitcll))
#La primera prueba que se debe realizar es
#la similar a la prueba asociada a la tabla ANOVA en regresión lineal múltiple
library(multcomp)
K=matrix(c(0,1,0,0,
0,0,1,0,
0,0,0,1), ncol=4, nrow=3, byrow=TRUE)
m=c(0,0,0)
summary(glht(fitprob_s, linfct=K, rhs=m), test=Chisqtest())  #Chisqtest() es apropiada para datos donde y no es continua
# Se rechaza H0, lo que implica que se puede proceder
# al análisis del modelo
datna$lnD2=datna$lnD*datna$lnD
#En general hay 4 ligas que se podrían usar para covariables factores: logit, probit, cloglog y log.
#Aqui emplearemos 3 ligas porque tenemos una variable numérica entre las covariables, omitimos liga log.
fitlogit=glm(died~Insecticide*lnD+Insecticide*lnD2, family = binomial(link="logit"), data=datna)
#summary(fitlogit)
fitprob=glm(died~Insecticide*lnD+Insecticide*lnD2, family = binomial(link="probit"), data=datna)
#summary(fitprob)
fitcll=glm(died~Insecticide*lnD+Insecticide*lnD2, family = binomial(link="cloglog"), data=datna)
#summary(fitcll)
#En general hay 4 ligas que se podrían usar para covariables factores: logit, probit, cloglog y log.
#Aqui emplearemos 3 ligas porque tenemos una variable numérica entre las covariables, omitimos liga log.
fitlogit_s=glm(died~Insecticide+lnD +lnD2, family = binomial(link="logit"), data=datna)
#summary(fitlogit)
fitprob_s=glm(died~Insecticide+lnD +lnD2, family = binomial(link="probit"), data=datna)
#summary(fitprob)
fitcll_s=glm(died~Insecticide+lnD +lnD2, family = binomial(link="cloglog"), data=datna)
#summary(fitcll)
#stargazer(fitlogit, fitprob, fitcll, fitlogit_s, fitprob_s, fitcll_s)
#Además con el modelo completo también los criterios AIC y BIC coinciden
# ("AIC:logit probit cloglog")
# c(AIC(fitlogit), AIC(fitprob),  AIC(fitcll))
# ("BIC:logit probit cloglog")
# c(BIC(fitlogit), BIC(fitprob), BIC(fitcll))
#La primera prueba que se debe realizar es
#la similar a la prueba asociada a la tabla ANOVA en regresión lineal múltiple
library(multcomp)
K=matrix(c(0,1,0,0,0,
0,0,1,0,0,
0,0,0,1,0,
0,0,0,0,1), ncol=5, nrow=4, byrow=TRUE)
m=c(0,0,0,0)
summary(glht(fitprob_s, linfct=K, rhs=m), test=Chisqtest())  #Chisqtest() es apropiada para datos donde y no es continua
# Se rechaza H0, lo que implica que se puede proceder
# al análisis del modelo
# Se incluye cierta aleatorización para datos binarios
library(statmod)
fitlogitqr <- qresid(fitprob_s)
#qqnorm( fitlogitqr, las=1 ); qqline( fitlogitqr)
lilKS<-nortest::lillie.test(fitlogitqr)
Shapiro<-shapiro.test(fitlogitqr)
library(DHARMa)  #Los residuales simulados también son útiles en este caso
set.seed(123)
fitprobitres <- simulateResiduals(fittedModel = fitprob_s)
plot(fitprobitres)
deviance_df<-deviance(fitprob_s)/df.residual(fitprob_s)
newdata <- data.frame(Insecticide = c("A", "A","A","A", "A","A","B","B", "B", "B","B", "B","C","C", "C", "C","C", "C"), lnD = c(0.6931472, 0.9707789, 1.2470323,1.5238800, 1.8017098, 2.0794415, 0.6931472, 0.9707789, 1.2470323,1.5238800, 1.8017098, 2.0794415, 0.6931472, 0.9707789, 1.2470323,1.5238800, 1.8017098, 2.0794415), lnD2 = c(0.4804530, 0.9424117, 1.5550895,2.32221, 3.246158, 4.32407, 0.4804530, 0.9424117, 1.5550895,2.32221, 3.246158, 4.32407, 0.4804530, 0.9424117, 1.5550895,2.32221, 3.246158, 4.32407) )
newdata$prob_s <- predict(fitprob_s, newdata[,1:3], type = c("response"), se.fit=TRUE)$fit
newdata$Deposit<-exp(newdata$lnD)
#kable(newdata)
newdata1<- newdata[,-c(1,5)]
datosfin<-cbind(datos,newdata1)
ggplot(data = datosfin, aes(x = Deposit))+
geom_point(aes(y = p_Killed, colour="coral", shape =Insecticide )) +
geom_point(aes(y = prob_s, colour="deepskyblue", shape = Insecticide)) +
scale_y_continuous(sec.axis = sec_axis(~ .*1,  name="probit")) + theme_bw()
ggplot(data=datos, aes(x=Deposit,y=p_Killed, colour=Insecticide))+ geom_point()+ theme_bw()+
theme(text = element_text(size = 11),element_line(linewidth =0.5))
fitprob_s
quad <- function(a, b, c)
{
a <- as.complex(a)
answer <- c((-b + sqrt(b^2 - 4 * a * c)) / (2 * a),
(-b - sqrt(b^2 - 4 * a * c)) / (2 * a))
if(all(Im(answer) == 0)) answer <- Re(answer)
if(answer[1] == answer[2]) return(answer[1])
answer
}
fitprob_s[5]
fitprob_s$coefficients[5]
fitprob_s$coefficients[4]
fitprob_s$coefficients[1]
quad(a = fitprob_s[5], b = fitprob_s[4], c = fitprob_s[1]-0.7)
a=fitprob_s[5]
b=fitprob_s[4]
cfitprob_s[1]-0.7
a=fitprob_s[5]
b=fitprob_s[4]
c=fitprob_s[1]-0.7
View(b)
a=fitprob_s$coefficients[5]
b=fitprob_s$coefficients[4]
c=fitprob_s$coefficients[1]-0.7
quad(a, b, c)
a=fitprob_s$coefficients[5]
b=fitprob_s$coefficients[4]
c=fitprob_s$coefficients[1]-0.7
D_A<-exp(quad(a, b, c))
#Para insecticida B
a=fitprob_s$coefficients[5]
b=fitprob_s$coefficients[4]
c=fitprob_s$coefficients[1]+fitprob_s$coefficients[2]-0.7
D_B<-exp(quad(a, b, c))
#Para insecticida C
a=fitprob_s$coefficients[5]
b=fitprob_s$coefficients[4]
c=fitprob_s$coefficients[1]+fitprob_s$coefficients[3]-0.7
D_C<-exp(quad(a, b, c))
D_C[2]
D_C[1]
tabulate(D_C[1])
kable(D_C[1])
library(multcomp)
K=matrix(c(0,-1,1,0,0,
0, 0,0,1,0), ncol=5, nrow=2, byrow=TRUE)
m=c(0,0)
summary(glht(fitprob_s, linfct=K, rhs=m, alternative="less"), test=Chisqtest())
library(multcomp)
K=matrix(c(0,-1,1,0,0,
0, 0,1,0,0), ncol=5, nrow=2, byrow=TRUE)
m=c(0,0)
summary(glht(fitprob_s, linfct=K, rhs=m, alternative="less"), test=Chisqtest())
library(multcomp)
K=matrix(c(0,1,0,0,0), ncol=5, nrow=1, byrow=TRUE)
m=c(0)
summary(glht(fitprob_s, linfct=K, rhs=m), test=Chisqtest())
library(multcomp)
K=matrix(c(0,0,1,0,0,
0,-1,1,0,0), ncol=5, nrow=2, byrow=TRUE)
m=c(0,0)
summary(glht(fitprob_s, linfct=K, rhs=m, alternative="less"), test=Chisqtest())
library(multcomp)
K=matrix(c(0,0,1,0,0,
0,-1,1,0,0), ncol=5, nrow=2, byrow=TRUE)
m=c(0,0)
summary(glht(fitprob_s, linfct=K, rhs=m, alternative="less"), test=Chisqtest())
library(multcomp)
K=matrix(c(0,0,1,0,0,
0,-1,1,0,0), ncol=5, nrow=2, byrow=TRUE)
m=c(0,0)
summary(glht(fitprob_s, linfct=K, rhs=m, alternative="less"), test=Chisqtest())
